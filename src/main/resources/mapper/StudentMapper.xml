<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.experiment2.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.experiment2.bean.Student">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="ID_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="start_year" jdbcType="DATE" property="startYear" />
    <result column="student_source" jdbcType="VARCHAR" property="studentSource" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, student_name, ID_card, phone_number, start_year, student_source, major, class_name
  </sql>
  <select id="selectByExample" parameterType="com.example.experiment2.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.experiment2.bean.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.experiment2.bean.Student">
    insert into student (ID, student_name, ID_card, 
      phone_number, start_year, student_source, 
      major, class_name)
    values (#{id,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{startYear,jdbcType=DATE}, #{studentSource,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.experiment2.bean.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="idCard != null">
        ID_card,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="startYear != null">
        start_year,
      </if>
      <if test="studentSource != null">
        student_source,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="className != null">
        class_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="startYear != null">
        #{startYear,jdbcType=DATE},
      </if>
      <if test="studentSource != null">
        #{studentSource,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.experiment2.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        ID_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.startYear != null">
        start_year = #{record.startYear,jdbcType=DATE},
      </if>
      <if test="record.studentSource != null">
        student_source = #{record.studentSource,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set ID = #{record.id,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      ID_card = #{record.idCard,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      start_year = #{record.startYear,jdbcType=DATE},
      student_source = #{record.studentSource,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.experiment2.bean.Student">
    update student
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        ID_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="startYear != null">
        start_year = #{startYear,jdbcType=DATE},
      </if>
      <if test="studentSource != null">
        student_source = #{studentSource,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.experiment2.bean.Student">
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      ID_card = #{idCard,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      start_year = #{startYear,jdbcType=DATE},
      student_source = #{studentSource,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAllMajors" resultType="java.lang.String">
    select distinct major from student
  </select>
  <select id="getClassesByMajor" resultType="java.lang.String">
    select distinct class_name from student where major = #{major}
  </select>

</mapper>