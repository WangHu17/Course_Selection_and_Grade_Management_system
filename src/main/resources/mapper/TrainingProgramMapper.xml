<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.experiment2.dao.TrainingProgramMapper">
  <resultMap id="BaseResultMap" type="com.example.experiment2.bean.TrainingProgram">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_nature" jdbcType="VARCHAR" property="courseNature" />
    <result column="course_major" jdbcType="VARCHAR" property="courseMajor" />
    <result column="course_teacher" jdbcType="VARCHAR" property="courseTeacher" />
    <result column="course_attributes" jdbcType="VARCHAR" property="courseAttributes" />
    <result column="preliminary_course" jdbcType="VARCHAR" property="preliminaryCourse" />
    <result column="followup_course" jdbcType="VARCHAR" property="followupCourse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, course_nature, course_major, course_teacher, course_attributes, 
    preliminary_course, followup_course
  </sql>
  <select id="selectByExample" parameterType="com.example.experiment2.bean.TrainingProgramExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from training_program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from training_program
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from training_program
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.experiment2.bean.TrainingProgramExample">
    delete from training_program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.experiment2.bean.TrainingProgram">
    insert into training_program (course_id, course_name, course_nature, 
      course_major, course_teacher, course_attributes, 
      preliminary_course, followup_course)
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{courseNature,jdbcType=VARCHAR}, 
      #{courseMajor,jdbcType=VARCHAR}, #{courseTeacher,jdbcType=VARCHAR}, #{courseAttributes,jdbcType=VARCHAR}, 
      #{preliminaryCourse,jdbcType=VARCHAR}, #{followupCourse,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.experiment2.bean.TrainingProgram">
    insert into training_program
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseNature != null">
        course_nature,
      </if>
      <if test="courseMajor != null">
        course_major,
      </if>
      <if test="courseTeacher != null">
        course_teacher,
      </if>
      <if test="courseAttributes != null">
        course_attributes,
      </if>
      <if test="preliminaryCourse != null">
        preliminary_course,
      </if>
      <if test="followupCourse != null">
        followup_course,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNature != null">
        #{courseNature,jdbcType=VARCHAR},
      </if>
      <if test="courseMajor != null">
        #{courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="courseTeacher != null">
        #{courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="courseAttributes != null">
        #{courseAttributes,jdbcType=VARCHAR},
      </if>
      <if test="preliminaryCourse != null">
        #{preliminaryCourse,jdbcType=VARCHAR},
      </if>
      <if test="followupCourse != null">
        #{followupCourse,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.experiment2.bean.TrainingProgramExample" resultType="java.lang.Long">
    select count(*) from training_program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update training_program
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNature != null">
        course_nature = #{record.courseNature,jdbcType=VARCHAR},
      </if>
      <if test="record.courseMajor != null">
        course_major = #{record.courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTeacher != null">
        course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.courseAttributes != null">
        course_attributes = #{record.courseAttributes,jdbcType=VARCHAR},
      </if>
      <if test="record.preliminaryCourse != null">
        preliminary_course = #{record.preliminaryCourse,jdbcType=VARCHAR},
      </if>
      <if test="record.followupCourse != null">
        followup_course = #{record.followupCourse,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update training_program
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_nature = #{record.courseNature,jdbcType=VARCHAR},
      course_major = #{record.courseMajor,jdbcType=VARCHAR},
      course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
      course_attributes = #{record.courseAttributes,jdbcType=VARCHAR},
      preliminary_course = #{record.preliminaryCourse,jdbcType=VARCHAR},
      followup_course = #{record.followupCourse,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.experiment2.bean.TrainingProgram">
    update training_program
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNature != null">
        course_nature = #{courseNature,jdbcType=VARCHAR},
      </if>
      <if test="courseMajor != null">
        course_major = #{courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="courseTeacher != null">
        course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="courseAttributes != null">
        course_attributes = #{courseAttributes,jdbcType=VARCHAR},
      </if>
      <if test="preliminaryCourse != null">
        preliminary_course = #{preliminaryCourse,jdbcType=VARCHAR},
      </if>
      <if test="followupCourse != null">
        followup_course = #{followupCourse,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.experiment2.bean.TrainingProgram">
    update training_program
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_nature = #{courseNature,jdbcType=VARCHAR},
      course_major = #{courseMajor,jdbcType=VARCHAR},
      course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      course_attributes = #{courseAttributes,jdbcType=VARCHAR},
      preliminary_course = #{preliminaryCourse,jdbcType=VARCHAR},
      followup_course = #{followupCourse,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <select id="getCourseNamesByMajor" resultType="java.lang.String">
    select course_name from training_program where course_major = #{major}
  </select>
</mapper>